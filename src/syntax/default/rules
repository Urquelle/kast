then        0 wrap always = _ ";" "\n" _ ->
stmt        0 wrap always = _ ";"
"use .*"    1 wrap never  = "use" " " _ ".*"
if          1 wrap never  = "if" " " cond " " "then" " " then " " "else" " " else ->
comma       5 wrap if_any = <- _ "," " "/"\n" _
tcomma      5 wrap never  = <- _ ","
or         10 wrap never  = _ " " "or" " " _
and        11 wrap never  = _ " " "and" " " _
add        15 wrap if_any = <- _ " "/"\n" "+" " " _
sub        15 wrap if_any = <- _ " "/"\n" "-" " " _
mul        17 wrap if_any = <- _ " "/"\n" "*" " " _
div        17 wrap if_any = <- _ " "/"\n" "/" " " _
"|>"       20 wrap if_any = <- arg " "/"\n\t" "|>" " " f ""/"\\"
"."        20 wrap if_any = <- obj ""/"\n\t" "." method ""/"\\"
apply      50 wrap never  = <- f " " arg
unit     1000 wrap never  = "(" ")"
scope    1000 wrap if_any = "(" ""/"\n\t" _:any ""/"\\\n" ")"